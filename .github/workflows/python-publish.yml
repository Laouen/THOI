name: Upload Python Package

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest build
    - name: Run tests
      env:
        PYTHONPATH: .
      run: pytest tests
    - name: Bump version and tag
      run: |
        git pull --ff-only --tags
        latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $latest"
        IFS='.' read -r major minor patch <<< "${latest#v}"
        patch=$((patch + 1))
        new_version="v$major.$minor.$patch"
        echo "Releasing $new_version"
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag $new_version
        git push origin $new_version
        echo "new_version=$new_version" >> $GITHUB_ENV
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_version }}
        release_name: ${{ env.new_version }}
        body: Release ${{ env.new_version }}
        draft: false
        prerelease: false
